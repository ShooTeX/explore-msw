/**
 * This file is AUTO GENERATED by [msw-auto-mock](https://github.com/zoubingwu/msw-auto-mock)
 * Feel free to commit/edit it as you need.
 */
/* eslint-disable */
/* tslint:disable */
import { HttpResponse, http } from "msw";
import { faker } from "@faker-js/faker";
import { setupServer } from "msw/node";

faker.seed(1);

const baseURL = "https://petstore.swagger.io/v2";
const MAX_ARRAY_LENGTH = 20;

let i = 0;
const next = () => {
  if (i === Number.MAX_SAFE_INTEGER - 1) {
    i = 0;
  }
  return i++;
};

export const handlers = [
  http.post(`${baseURL}/pet/:petId/uploadImage`, () => {
    const resultArray = [[getUploadFile200Response(), { status: 200 }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.post(`${baseURL}/pet`, () => {
    const resultArray = [[null, { status: 405 }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.put(`${baseURL}/pet`, () => {
    const resultArray = [
      [null, { status: 400 }],
      [null, { status: 404 }],
      [null, { status: 405 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.get(`${baseURL}/pet/findByStatus`, () => {
    const resultArray = [
      [getFindPetsByStatus200Response(), { status: 200 }],
      [null, { status: 400 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.get(`${baseURL}/pet/findByTags`, () => {
    const resultArray = [
      [getFindPetsByTags200Response(), { status: 200 }],
      [null, { status: 400 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.get(`${baseURL}/pet/:petId`, () => {
    const resultArray = [
      [getGetPetById200Response(), { status: 200 }],
      [null, { status: 400 }],
      [null, { status: 404 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.post(`${baseURL}/pet/:petId`, () => {
    const resultArray = [[null, { status: 405 }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.delete(`${baseURL}/pet/:petId`, () => {
    const resultArray = [
      [null, { status: 400 }],
      [null, { status: 404 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.post(`${baseURL}/store/order`, () => {
    const resultArray = [
      [getPlaceOrder200Response(), { status: 200 }],
      [null, { status: 400 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.get(`${baseURL}/store/order/:orderId`, () => {
    const resultArray = [
      [getGetOrderById200Response(), { status: 200 }],
      [null, { status: 400 }],
      [null, { status: 404 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.delete(`${baseURL}/store/order/:orderId`, () => {
    const resultArray = [
      [null, { status: 400 }],
      [null, { status: 404 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.get(`${baseURL}/store/inventory`, () => {
    const resultArray = [[getGetInventory200Response(), { status: 200 }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.post(`${baseURL}/user/createWithArray`, () => {
    const resultArray = [[null, { status: NaN }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.post(`${baseURL}/user/createWithList`, () => {
    const resultArray = [[null, { status: NaN }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.get(`${baseURL}/user/:username`, () => {
    const resultArray = [
      [getGetUserByName200Response(), { status: 200 }],
      [null, { status: 400 }],
      [null, { status: 404 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.put(`${baseURL}/user/:username`, () => {
    const resultArray = [
      [null, { status: 400 }],
      [null, { status: 404 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.delete(`${baseURL}/user/:username`, () => {
    const resultArray = [
      [null, { status: 400 }],
      [null, { status: 404 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.get(`${baseURL}/user/login`, () => {
    const resultArray = [
      [getLoginUser200Response(), { status: 200 }],
      [null, { status: 400 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.get(`${baseURL}/user/logout`, () => {
    const resultArray = [[null, { status: NaN }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.post(`${baseURL}/user`, () => {
    const resultArray = [[null, { status: NaN }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
];

export function getUploadFile200Response() {
  return { code: 879680074809344, type: "templum", message: "amitto" };
}

export function getFindPetsByStatus200Response() {
  return [
    {
      id: 8205153366704128,
      category: { id: 3442171728363520, name: "Billie Littel-Hoeger MD" },
      name: "doggie",
      photoUrls: [
        "iusto",
        "adaugeo",
        "sed",
        "adimpleo",
        "illum",
        "chirographum",
        "candidus",
        "advoco",
        "iusto",
        "tenus",
        "considero",
        "cogito",
        "utrimque",
        "confido",
        "calamitas",
        "vero",
        "comburo",
        "villa",
        "colo",
        "comprehendo",
      ],
      tags: [
        { id: 6965479763607552, name: "Gwendolyn Cole" },
        { id: 8907423578324992, name: "Maria Dickinson" },
        { id: 8423290752204800, name: "Andres Morissette" },
        { id: 4173320855486464, name: "Arlene Kling" },
        { id: 8676835856482304, name: "Benny Pacocha-Gleason" },
        { id: 4357941993930752, name: "Debbie Muller" },
        { id: 2252642856206336, name: "Gustavo Doyle Jr." },
        { id: 6812336580984832, name: "Larry Pfannerstill" },
        { id: 1213692936978432, name: "Sandra Crona" },
        { id: 6503408311730176, name: "Tiffany Rath" },
      ],
      status: "sold",
    },
    {
      id: 513429433483264,
      category: { id: 2072941707657216, name: "Betsy Bruen" },
      name: "doggie",
      photoUrls: ["ventus"],
      tags: [
        { id: 2296742378733568, name: "Rochelle Carroll" },
        { id: 175760264396800, name: "Lester Ebert" },
      ],
      status: "sold",
    },
    {
      id: 5621516452495360,
      category: { id: 3591849646227456, name: "Wilson Hodkiewicz" },
      name: "doggie",
      photoUrls: [
        "stella",
        "vereor",
        "quasi",
        "voluptatem",
        "uxor",
        "cilicium",
        "arx",
        "ceno",
        "crudelis",
        "angustus",
      ],
      tags: [
        { id: 8095183308587008, name: "Shawna Cartwright" },
        { id: 8019484585492480, name: "Phil Rice" },
        { id: 5002405015977984, name: "Dr. Jeffrey Casper" },
        { id: 1998094486994944, name: "Tom Gottlieb-Schmidt" },
        { id: 7999159609065472, name: "Silvia Ernser" },
        { id: 2529523564281856, name: "Alberta Blick" },
        { id: 6666565659394048, name: "Mr. Dale Lubowitz" },
        { id: 3973593029410816, name: "Keith Durgan" },
        { id: 7705900085149696, name: "Jesus Weimann" },
        { id: 1726992351232000, name: "Jay Stracke" },
        { id: 81276688138240, name: "Leah Hoeger-Murray" },
        { id: 7445475607183360, name: "Johanna Ullrich" },
        { id: 1521421333299200, name: "Herbert Sanford" },
        { id: 6433519586770944, name: "Mrs. Gail Green" },
        { id: 6084532885258240, name: "Maryann Ward Jr." },
        { id: 885507175219200, name: "Dr. Tommie Nikolaus IV" },
      ],
      status: "sold",
    },
    {
      id: 7495246332035072,
      category: { id: 8100889554321408, name: "Melvin Bradtke" },
      name: "doggie",
      photoUrls: [
        "fugit",
        "officia",
        "vulgivagus",
        "coma",
        "decens",
        "abundans",
        "ex",
        "ait",
        "ipsam",
        "atrox",
      ],
      tags: [
        { id: 3979649595998208, name: "Simon Tromp" },
        { id: 3506005463793664, name: "Susan Upton" },
        { id: 1320309206548480, name: "Joel Pagac-Hauck" },
        { id: 88922268893184, name: "Carl Mann" },
        { id: 4194325275607040, name: "Estelle White" },
        { id: 5888946984714240, name: "Pedro Bailey" },
        { id: 6526243709124608, name: "Conrad Schaefer" },
        { id: 5246543649046528, name: "Jerome Keebler" },
      ],
      status: "available",
    },
    {
      id: 8756997742657536,
      category: { id: 3603766993485824, name: "Lana Sauer" },
      name: "doggie",
      photoUrls: ["ullam", "vir", "vox", "thema"],
      tags: [
        { id: 7068862138810368, name: "Paul Brekke" },
        { id: 3755144449622016, name: "Melba Weissnat II" },
        { id: 740521978888192, name: "Anita Schroeder" },
        { id: 4408977840406528, name: "Alejandro McDermott" },
        { id: 4190587515305984, name: "Angel Cartwright" },
        { id: 5089975823499264, name: "Pat Lebsack" },
        { id: 5780951760109568, name: "Harry Hahn" },
        { id: 6224289170718720, name: "Sophie Zemlak" },
        { id: 2871622736281600, name: "Eileen Russel-Blanda" },
        { id: 187920398942208, name: "Miss Ashley Hodkiewicz" },
        { id: 5883653770969088, name: "Rex Mraz" },
        { id: 8962698593173504, name: "Shawn Vandervort-Leuschke" },
        { id: 1162767696396288, name: "Herman Lueilwitz" },
        { id: 6273498357956608, name: "Olivia Feest" },
        { id: 6037538389098496, name: "Ernestine McCullough" },
        { id: 5405025184514048, name: "Mr. Bradley Braun" },
        { id: 5835987710115840, name: "Janis Cremin" },
        { id: 7299123803848704, name: "Sylvester Beier" },
        { id: 1422316846186496, name: "Andre Nolan" },
        { id: 3356322399518720, name: "Elsie Feil" },
      ],
      status: "available",
    },
    {
      id: 5025474860285952,
      category: { id: 6404628482621440, name: "Katherine Hand" },
      name: "doggie",
      photoUrls: ["bene", "dolores", "auctus"],
      tags: [
        { id: 1602514208161792, name: "Kathryn Kutch" },
        { id: 8615194345340928, name: "Ms. Meredith Hermann" },
        { id: 4796537408323584, name: "Lindsay Emard Sr." },
        { id: 6525808759799808, name: "Dr. Darrell Kirlin" },
        { id: 7953129597304832, name: "Casey Roberts" },
        { id: 1311393548599296, name: "Gordon Hagenes DDS" },
        { id: 6981323128307712, name: "Tonya Nolan" },
        { id: 2622226757058560, name: "Brandy Zieme" },
        { id: 5700438399647744, name: "Jeremiah Harris" },
        { id: 8296104919564288, name: "Derek Johns Sr." },
        { id: 8667720933441536, name: "Mr. Harry D'Amore" },
        { id: 2410370643787776, name: "Dennis Ward" },
        { id: 6238658610855936, name: "Brenda Cummerata" },
        { id: 6512248973426688, name: "Harvey Powlowski II" },
        { id: 5912425750593536, name: "Stewart Hermiston" },
        { id: 3979324940091392, name: "Sheila Kuphal" },
        { id: 6408967844528128, name: "Barbara Leffler" },
        { id: 8498276785455104, name: "Willard Batz" },
      ],
      status: "available",
    },
    {
      id: 2196926206312448,
      category: { id: 5320208004677632, name: "Leah Ruecker" },
      name: "doggie",
      photoUrls: ["alias", "audacia", "aggredior", "comminor", "vulariter"],
      tags: [{ id: 7258428026126336, name: "Ellis MacGyver" }],
      status: "pending",
    },
    {
      id: 3506530466922496,
      category: { id: 6651747388882944, name: "Delores Schiller" },
      name: "doggie",
      photoUrls: [
        "volup",
        "conturbo",
        "tactus",
        "quod",
        "pauci",
        "caput",
        "delibero",
        "adulescens",
        "attero",
        "suggero",
        "audacia",
        "aliquid",
        "cibo",
        "ceno",
        "cohibeo",
        "nesciunt",
      ],
      tags: [
        { id: 757231542861824, name: "Rafael Kuphal" },
        { id: 6982086804111360, name: "Allen Bauch" },
        { id: 6771724779520000, name: "Dr. Lorene O'Hara" },
        { id: 5885038151335936, name: "Raul Hintz" },
        { id: 2617103758655488, name: "Mrs. Dixie Gutkowski" },
        { id: 4415487513460736, name: "Paula McClure" },
      ],
      status: "pending",
    },
    {
      id: 6802130627198976,
      category: { id: 7770785785577472, name: "Ellis Bergstrom-Wisozk" },
      name: "doggie",
      photoUrls: ["rerum"],
      tags: [
        { id: 1408842640392192, name: "Melba West" },
        { id: 2630583152803840, name: "Micheal Rice" },
        { id: 1903320610373632, name: "Grant O'Kon" },
        { id: 853960548155392, name: "Tammy Murphy" },
        { id: 4350347334123520, name: "Herman Walsh" },
        { id: 7114011501920256, name: "Mr. Corey Adams" },
        { id: 3689042577195008, name: "Dr. Noel Johns" },
        { id: 7399456045531136, name: "Hazel Ziemann V" },
        { id: 8169497242370048, name: "Elmer Kihn MD" },
        { id: 2595754239590400, name: "Cora Hartmann" },
        { id: 2486289309892608, name: "Evelyn Hettinger II" },
        { id: 6560497310629888, name: "Calvin Runolfsson" },
        { id: 8226693957287936, name: "Kara Rosenbaum" },
        { id: 8467440134520832, name: "Katherine Quitzon" },
        { id: 574880418365440, name: "Jessie Rutherford-Olson" },
        { id: 1927065121062912, name: "Carroll Grimes" },
        { id: 7447611501969408, name: "Kyle McLaughlin" },
        { id: 6293648519987200, name: "Ms. Anna Ruecker DDS" },
        { id: 5605128979611648, name: "Chester Braun" },
      ],
      status: "available",
    },
    {
      id: 6037511897874432,
      category: { id: 680425647243264, name: "Dr. Ben Satterfield" },
      name: "doggie",
      photoUrls: [
        "ambitus",
        "argentum",
        "depereo",
        "comprehendo",
        "conservo",
        "vulnus",
        "magnam",
        "baiulus",
      ],
      tags: [{ id: 8605976047386624, name: "Salvador Rice" }],
      status: "available",
    },
  ];
}

export function getFindPetsByTags200Response() {
  return [
    {
      id: 3729695021465600,
      category: { id: 4546391030366208, name: "Todd McKenzie" },
      name: "doggie",
      photoUrls: [
        "studio",
        "omnis",
        "corrigo",
        "tolero",
        "adaugeo",
        "quaerat",
        "absens",
        "allatus",
        "comprehendo",
        "voco",
      ],
      tags: [
        { id: 3250551189929984, name: "Lucas Wehner III" },
        { id: 1316931309142016, name: "Mr. Jimmy Hintz Sr." },
        { id: 1235822334443520, name: "Mae Mosciski" },
        { id: 3599704820547584, name: "Mr. Paul Spinka I" },
        { id: 6258980615618560, name: "Salvatore Wilkinson" },
        { id: 8193377371684864, name: "Nicole Kohler" },
        { id: 4076942466744320, name: "Marco Vandervort" },
        { id: 8513140572553216, name: "Carlos Blick" },
        { id: 3809775752052736, name: "Dwight O'Keefe" },
      ],
      status: "available",
    },
    {
      id: 5851295250382848,
      category: { id: 3645286735937536, name: "Vera Johnston" },
      name: "doggie",
      photoUrls: [
        "addo",
        "curiositas",
        "acer",
        "celebrer",
        "abstergo",
        "votum",
        "vigilo",
        "turpis",
        "sub",
        "ultra",
        "corrupti",
        "utroque",
        "admiratio",
        "sequi",
        "cruentus",
      ],
      tags: [
        { id: 6246039589748736, name: "Doreen Weimann" },
        { id: 2071274310336512, name: "Karla Koelpin" },
        { id: 7446532196401152, name: "Doyle Schiller" },
        { id: 7057205809381376, name: "Patrick Schoen" },
        { id: 5663155826982912, name: "Carmen Ankunding" },
        { id: 7451745227636736, name: "Claudia Goldner" },
        { id: 8291814471630848, name: "Lula Bradtke PhD" },
        { id: 7040859725889536, name: "Olga Harber Jr." },
        { id: 6188667383054336, name: "Louise Schinner" },
        { id: 6703062775234560, name: "Mr. Garrett Deckow V" },
        { id: 900656290332672, name: "Spencer Pacocha" },
        { id: 5444990744395776, name: "Terence Robel Jr." },
      ],
      status: "pending",
    },
    {
      id: 3213573838864384,
      category: { id: 4598625390821376, name: "Jonathan Schmidt" },
      name: "doggie",
      photoUrls: [
        "vorax",
        "nemo",
        "congregatio",
        "aut",
        "canonicus",
        "adeo",
        "soluta",
        "vivo",
        "templum",
        "timor",
        "aequitas",
      ],
      tags: [
        { id: 6928532336803840, name: "Kyle Block" },
        { id: 6698317572472832, name: "Santiago Wolf" },
        { id: 89049821872128, name: "Miss Gina Skiles I" },
        { id: 236102560514048, name: "Grady Schmidt DVM" },
        { id: 2383260411756544, name: "Velma Greenholt DDS" },
        { id: 5154041550077952, name: "Evelyn Koch" },
      ],
      status: "available",
    },
    {
      id: 656286823743488,
      category: { id: 68393554149376, name: "Armando Miller" },
      name: "doggie",
      photoUrls: [
        "placeat",
        "supplanto",
        "succedo",
        "basium",
        "agnosco",
        "abundans",
        "aureus",
        "angustus",
        "suscipit",
        "casus",
        "derideo",
        "cerno",
        "solitudo",
      ],
      tags: [
        { id: 8348217215287296, name: "Ms. Heather Hahn" },
        { id: 2112119940055040, name: "Bernadette Halvorson" },
      ],
      status: "available",
    },
  ];
}

export function getGetPetById200Response() {
  return {
    id: 5922692161077248,
    category: { id: 6685057699807232, name: "Susan Beatty" },
    name: "doggie",
    photoUrls: ["admitto", "sono", "natus", "aegre", "temporibus", "adeptio"],
    tags: [
      { id: 14631795949568, name: "Amelia Bayer II" },
      { id: 5413713846730752, name: "Carole Hermann" },
      { id: 8700532401111040, name: "Ora Swift" },
      { id: 5411412998356992, name: "Dr. Deborah Kuphal" },
      { id: 7524377174212608, name: "Dean Watsica V" },
    ],
    status: "available",
  };
}

export function getPlaceOrder200Response() {
  return {
    id: 1297606628081664,
    petId: 3474597366202368,
    quantity: 7579934390222848,
    shipDate: "2023-12-13T04:09:05.067Z",
    status: "placed",
    complete: false,
  };
}

export function getGetOrderById200Response() {
  return {
    id: 7656977706516480,
    petId: 4717470034165760,
    quantity: 780653496893440,
    shipDate: "2023-12-08T10:04:26.468Z",
    status: "placed",
    complete: false,
  };
}

export function getGetInventory200Response() {
  return {
    turbo: 1642514998099968,
    unde: 5854263395745792,
    degusto: 7337563649998848,
    summisse: 7653686610231296,
    copiose: 868055208951808,
  };
}

export function getGetUserByName200Response() {
  return {
    id: 4757580750520320,
    username: "Faith Denesik",
    firstName: "Elizabeth McDermott",
    lastName: "Tasha Jerde",
    email: "Santiago_Medhurst8@gmail.com",
    password: "corpus",
    phone: "termes",
    userStatus: 2904919052910592,
  };
}

export function getLoginUser200Response() {
  return "suscipio";
}

// This configures a Service Worker with the given request handlers.
export const startWorker = () => {
  const server = setupServer(...handlers);
  server.listen();
};
